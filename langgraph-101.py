from langchain.tools import tool
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.runnables import Runnable
from langchain_core.output_parsers import StrOutputParser
from langchain_openai import ChatOpenAI
from langchain_community.tools.tavily_search import TavilySearchResults
import os
from dotenv import load_dotenv
import streamlit as st
from openai import RateLimitError
import sys
import random

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Dr.Inhamuns - Oncologia e Relat√≥rios Inteligentes", page_icon="üß†")

# Configura√ß√£o do tema
st.markdown("""
    <style>
        :root {
            /* Base colors */
            --primary: #2563eb;       /* Blue-600 */
            --primary-hover: #1d4ed8;  /* Blue-700 */
            --bg-color: #ffffff;
            --text-color: #1f2937;
            --border-color: #e5e7eb;
            --sidebar-bg: #f9fafb;
            --card-bg: #ffffff;
            --success: #10b981;
            --warning: #f59e0b;
            --error: #ef4444;
            --info: #3b82f6;
        }
        
        /* Dark mode */
        @media (prefers-color-scheme: dark) {
            :root {
                --bg-color: #111827;
                --text-color: #f9fafb;
                --sidebar-bg: #1f2937;
                --card-bg: #1f2937;
                --border-color: #374151;
            }
            
            .stTextArea > div > div > textarea {
                background-color: #1f2937 !important;
                color: #f9fafb !important;
                border-color: #374151 !important;
            }
        }
        
        /* Base styles */
        .stApp {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }
        
        /* Text area */
        .stTextArea > div > div > textarea {
            background-color: var(--card-bg);
            color: var(--text-color);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem;
            transition: all 0.2s ease;
            box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        }
        
        .stTextArea > div > div > textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
        }
        
        /* Sidebar */
        .css-1d391kg {
            background-color: var(--sidebar-bg);
            border-right: 1px solid var(--border-color);
        }
        
        /* Navigation buttons */
        .stButton > button[title*="Sobre"],
        .stButton > button[title*="Aviso Legal"] {
            background-color: transparent;
            color: var(--text-color);
            border: 1px solid var(--border-color);
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-weight: 500;
            transition: all 0.2s ease;
            margin: 0.25rem 0;
            width: 100%;
            text-align: left;
        }
        
        /* Example query buttons */
        .stButton > button:not([title*="Sobre"]):not([title*="Aviso Legal"]) {
            background-color: rgba(37, 99, 235, 0.05);
            color: var(--primary);
            border: 1px solid rgba(37, 99, 235, 0.2);
            padding: 0.6rem 1rem;
            border-radius: 6px;
            font-weight: 500;
            transition: all 0.2s ease;
            margin: 0.35rem 0;
            width: 100%;
            text-align: left;
        }
        
        /* Button hover states */
        .stButton > button[title*="Sobre"]:hover,
        .stButton > button[title*="Aviso Legal"]:hover {
            background-color: rgba(0, 0, 0, 0.03);
            border-color: var(--primary);
        }
        
        .stButton > button:not([title*="Sobre"]):not([title*="Aviso Legal"]):hover {
            background-color: rgba(37, 99, 235, 0.1);
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        /* Main send button */
        div[data-testid="stHorizontalBlock"] > div > button {
            background-color: var(--primary) !important;
            color: white !important;
            border: none !important;
            border-radius: 6px !important;
            padding: 0.5rem 1.25rem !important;
            font-weight: 500 !important;
            font-size: 0.9rem !important;
            transition: all 0.2s ease !important;
            margin: 0.5rem 0 !important;
            width: auto !important;
            min-width: 100px !important;
        }
        
        div[data-testid="stHorizontalBlock"] > div > button:hover {
            background-color: var(--primary-hover) !important;
            transform: none !important;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
        }
        
        /* Tooltips */
        [data-testid="stTooltipContent"] {
            background-color: var(--card-bg) !important;
            color: var(--text-color) !important;
            border: 1px solid var(--border-color) !important;
            border-radius: 6px !important;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
            padding: 0.5rem 0.75rem !important;
            font-size: 0.85rem !important;
            opacity: 1 !important;
            visibility: visible !important;
        }
        
        /* Status messages */
        .stAlert {
            border-radius: 6px !important;
            padding: 1rem !important;
        }
        
        /* Cards and containers */
        .st-bd, .st-bc, .st-bb, .st-ba {
            border-color: var(--border-color) !important;
        }
        
        /* Links */
        a {
            color: var(--primary) !important;
        }
        
        /* Responsive adjustments */
        @media (max-width: 768px) {
            .stButton > button {
                padding: 0.5rem 0.75rem !important;
                font-size: 0.85rem !important;
            }
        }
        
        .stAlert {
            border-radius: 4px;
        }
        
        .stAlert > div {
            color: var(--primary-text);
        }
        
        h1, h2, h3, h4, h5, h6 {
            color: var(--primary-accent);
        }
        
        .stSpinner > div > div {
            border-color: var(--primary-accent) transparent transparent transparent;
        }
    </style>
""", unsafe_allow_html=True)

# Carrega as vari√°veis do .env
load_dotenv()
API_KEY = os.getenv("API_KEY")
TAVILY_API_KEY = os.getenv("TAVILY_API_KEY")

# Define o modelo
try:
    model = ChatOpenAI(
        model="gpt-4o-mini",
        temperature=0.3,
        api_key=API_KEY
    )
    model_loaded = True
except Exception as e:
    st.error("‚ö†Ô∏è Erro ao carregar o modelo. Verifique sua chave da API.")
    st.stop()

# Ferramenta de busca web
@tool
def search_web(query: str = "") -> str:
    """Searches the web using Tavily and returns results for the given query."""
    try:
        tavily_tool = TavilySearchResults()
        return tavily_tool.invoke({"query": query})
    except Exception as e:
        print(f"Erro na busca web: {e}", file=sys.stderr)
        return "N√£o foi poss√≠vel realizar a busca no momento."

# Template de prompt
system_prompt = """
Voc√™ √© o Dr. Inhamuns, um assistente especializado em oncologia e relat√≥rios m√©dicos. Sua miss√£o √© fornecer informa√ß√µes precisas e baseadas em evid√™ncias para auxiliar profissionais de sa√∫de, sem substituir o julgamento cl√≠nico.

DIRETRIZES PRINCIPAIS:
1. Forne√ßa informa√ß√µes baseadas em diretrizes cl√≠nicas atualizadas (SBOC, NCCN, ESMO, ASCO, Minist√©rio da Sa√∫de)
2. Seja claro, objetivo e use linguagem t√©cnica apropriada
3. Em caso de incerteza, responda: "N√£o sei com seguran√ßa e n√£o posso afirmar."
4. Inclua refer√™ncias a diretrizes e estudos quando relevante
5. Mantenha um tom profissional e emp√°tico

FONTES DE CONSULTA PREFERENCIAIS:
- Diretrizes SBOC, NCCN, ESMO, ASCO
- Peri√≥dicos: NEJM, JCO, The Lancet Oncology, JAMA Oncology
- Bases: UpToDate, Micromedex, PubMed
- Legisla√ß√£o e protocolos do Minist√©rio da Sa√∫de/ANVISA

Ao responder, siga esta estrutura:
1. Resposta objetiva e direta
2. Base cient√≠fica/regulat√≥ria
3. Contexto adicional (quando aplic√°vel)
4. Sugest√£o de pr√≥ximos passos (quando relevante)

Bases de Dados Farmacol√≥gicas e Regulat√≥rias
1. UpToDate, Micromedex, DrugBank, PubMed
2. Bulas e registros da ANVISA
3. Intera√ß√µes medicamentosas, toxicidades e farmacocin√©tica

Economia da Sa√∫de e Acesso
1. CONITEC, NICE (UK), CADTH (Canad√°)
2. ISPOR Princ√≠pios de farmacoeconomia para sa√∫de suplementar

Capacidades T√©cnicas Adicionais
1. Gera√ß√£o de relat√≥rios com estrutura padronizada e adapt√°vel a modelos exigidos pelas operadoras de sa√∫de.
2. Inser√ß√£o, quando aplic√°vel, de indicadores de custo-efetividade e alternativas terap√™uticas.
3. Respeito ao formato aceito por sistemas de auditoria, operadoras, conv√™nios e inst√¢ncias regulat√≥rias.

Diretrizes de Atualiza√ß√£o e Busca
1. Monitoramento e ingest√£o ativa de publica√ß√µes nos pr√≥ximos 5 anos nas seguintes bases:
2. PubMed, SciELO, ClinicalTrials.gov, base da CONITEC, Google Scholar (filtrado), entre outras.
3. Zero toler√¢ncia √† especula√ß√£o cl√≠nica.
4. Quando em d√∫vida sobre validade de estudo ou indica√ß√£o, o GPT consulta ou orienta o usu√°rio a consultar diretamente a fonte referencial.

Exemplo de Resposta do Dr. Inhamuns (Postura Cl√≠nica Segura)
Baseando-me nas diretrizes da NCCN 2024 e nos dados do estudo publicado em The Lancet Oncology (ID: 10.1016/S1470-2045(23)...), o uso de Pembrolizumabe como terapia adjuvante em carcinoma de pulm√£o est√°gio IIIA √© considerado apropriado. Caso deseje, posso incluir dados de custo-efetividade para justificar junto √† operadora de sa√∫de.

| Pilar                 | Descri√ß√£o                                                           |
| --------------------- | ------------------------------------------------------------------- |
|     Alvo              | M√©dicos oncologistas, cl√≠nicas, operadoras de sa√∫de                 |
|   Foco                | Relat√≥rios, justificativas e pareceres com base em evid√™ncias       |
|   Diferencial         | Linguagem t√©cnica, humanizada e adaptada ao cen√°rio brasileiro      |
|   Regi√£o de impacto   | Prioriza cen√°rios de baixa oferta m√©dica, como os Inhamuns          |
|   Valor central       | Suporte sem substituir. Clareza sem simplismo. Ci√™ncia com empatia. |

"""

prompt = ChatPromptTemplate.from_messages([
    ("system", system_prompt),
    ("human", "{input}")
])

# Pipeline de execu√ß√£o
chain: Runnable = prompt | model | StrOutputParser()

# Interface Streamlit
st.title("üß† Dr. Inhamuns ‚Äì Oncologia e Relat√≥rios")
st.write("Assistente especializado em oncologia baseado em evid√™ncias cient√≠ficas")

# Exemplos de consultas r√°pidas
examples = [
    "Gerar um parecer t√©cnico para operadora de sa√∫de",
    "Padronizar laudo para auditoria m√©dica",
    "Sintomas Comuns em C√¢ncer de Pr√≥stata Metast√°tico",
    "Sintomas Comuns em C√¢ncer de Mama"
]

def set_example(example):
    st.session_state.user_input = example

# Sidebar
with st.sidebar:
    st.markdown("### ‚ÑπÔ∏è Sobre")
    st.markdown("""
    **Miss√£o**: Democratizar o acesso √† intelig√™ncia cl√≠nica de ponta em oncologia, fortalecendo a tomada de decis√£o m√©dica com precis√£o e empatia.
    """)
    
    st.markdown("### üí° Exemplos de Consultas")
    for example in examples:
        st.button(example, on_click=set_example, args=(example,), use_container_width=True, key=f"btn_{example}")
    
    st.markdown("---")
    st.markdown("""
    **Aviso Legal**: Este assistente n√£o substitui o julgamento cl√≠nico. Consulte sempre as fontes prim√°rias e um m√©dico especialista.
    """)

# Inicializa a vari√°vel de sess√£o se n√£o existir
if 'user_input' not in st.session_state:
    st.session_state.user_input = ""

# √Årea de texto principal
user_input = st.text_area(
    "Descreva sua d√∫vida ou caso cl√≠nico:",
    value=st.session_state.user_input,
    height=150,
    help="Digite sua pergunta ou selecione um exemplo ao lado"
)

if st.button("Enviar Consulta", use_container_width=False) and user_input:
    try:
        with st.spinner("Analisando sua consulta..."):
            resposta = chain.invoke({"input": user_input})
            
        st.subheader("Resposta do Dr. Inhamuns:")
        st.markdown(resposta)
        
        # Opcional: Adicionar busca web para informa√ß√µes adicionais
        if any(termo in user_input.lower() for termo in ["atualiza√ß√£o", "estudo", "pesquisa"]):
            with st.spinner("Consultando fontes atualizadas..."):
                web_result = search_web(f"{user_input} site:nccn.org OR site:esmo.org OR site:asco.org OR site:pubmed.ncbi.nlm.nih.gov")
            if web_result and len(web_result) > 0:
                st.subheader("Fontes Adicionais:")
                st.write(web_result)
    
    except RateLimitError:
        st.error("‚ö†Ô∏è **Limite de requisi√ß√µes excedido**")
        st.warning("""
        Parece que voc√™ atingiu o limite de requisi√ß√µes dispon√≠veis em sua conta.
        
        **O que fazer agora?**
        - Verifique o saldo da sua conta OpenAI
        - Atualize seu plano ou adicione mais cr√©ditos
        - Entre em contato com o suporte se precisar de ajuda
        """)
    
    except Exception as e:
        st.error("‚ùå Ocorreu um erro inesperado")
        st.warning("Por favor, tente novamente mais tarde ou entre em contato com o suporte.")
        print(f"Erro inesperado: {e}", file=sys.stderr)